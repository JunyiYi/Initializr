<Project Sdk="Microsoft.NET.Sdk.Web">

  <Import Project="versions.props" />
  <PropertyGroup>
    <TargetFramework>{{TargetFrameworkVersion}}</TargetFramework>
    <TargetFramework Condition="'$(TargetFrameworkOverride)' != ''">TargetFrameworkOverride</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  <ItemGroup >
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="$(AspNetCoreVersion)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore" Version="$(AspNetCoreVersion)"/>
    {{#OrganizationalAuth}}
    <PackageReference Include="Microsoft.AspNetCore.Authentication.AzureAD.UI" Version="$(AspNetCoreVersion)" />
    {{/OrganizationalAuth}}
    {{#IndividualB2CAuth}}
    <PackageReference Include="Microsoft.AspNetCore.Authentication.AzureADB2C.UI" Version="$(AspNetCoreVersion)" />
    {{/IndividualB2CAuth}}
    {{#RequiresHttps}}
    <PackageReference Include="Microsoft.AspNetCore.HttpsPolicy" Version="$(AspNetCoreVersion)" />
    {{/RequiresHttps}}
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="$(AspNetCoreVersion)" />
    {{#CloudFoundry}}
    <PackageReference Include="Steeltoe.CloudFoundry.ConnectorCore" Version="$(SteeltoeConnectorVersion)"/>
    <PackageReference Include="Steeltoe.Management.CloudFoundryCore"  Version="$(SteeltoeManagementVersion)" />
    <PackageReference Include="Steeltoe.Management.ExporterCore"  Version="$(SteeltoeManagementVersion)"/>
    {{/CloudFoundry}}
    {{#AnyConnector}}
    <PackageReference Include="Steeltoe.CloudFoundry.ConnectorCore"  Version="$(SteeltoeConnectorVersion)"/>
    {{/AnyConnector}}
    {{#ActuatorsOrCloudFoundry}}
    <PackageReference Include="Steeltoe.Management.CloudFoundryCore" Version="$(SteeltoeManagementVersion)" />
    {{/ActuatorsOrCloudFoundry}}
    
    <PackageReference Include="Steeltoe.Management.ExporterCore" Version="$(SteeltoeManagementVersion)"/>
    {{#CircuitBreaker}}
    <PackageReference Include="Steeltoe.CircuitBreaker.HystrixCore" Version="$(SteeltoeCircuitBreakerVersion)" />
    {{/CircuitBreaker}}
    {{#MySql}}
    <PackageReference Include="MySql.Data" Version="$(MySqlVersion)" />
    {{/MySql}}
    {{#Postgres}}
    <PackageReference Include="Npgsql" Version="$(NpgSqlVersion)" />
    {{/Postgres}}
    <PackageReference Include="Newtonsoft.Json" Version="12.0.2" />
    {{#Discovery}}
    <PackageReference Include="Steeltoe.Discovery.ClientCore" Version="{{Version}}"/>
    {{/Discovery}}
    {{#SQLServer}}
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="$(AspNetCoreVersion)" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="$(AspNetCoreVersion)" />
    <PackageReference Include="Steeltoe.CloudFoundry.Connector.EFCore" Version="$(SteeltoeConnectorVersion)" />
    {{/SQLServer}}
    {{#Redis}}
    <PackageReference Include="Microsoft.Extensions.Caching.Redis" Version="$(AspNetCoreVersion)" />
    {{/Redis}}
    {{#AnyEFCore}}
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="$(AspNetCoreVersion)" />
    <PackageReference Include="Steeltoe.CloudFoundry.Connector.EFCore"  Version="$(SteeltoeConnectorVersion)" />
    {{/AnyEFCore}}

    {{#PostgresEFCore}}
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL"  Version="$(AspNetCoreVersion)" />
    {{/PostgresEFCore}}
    {{#MongoDB}}
    <PackageReference Include="MongoDB.Driver" Version="$(MongoDBVersion)" />
    {{/MongoDB}}
    {{#RabbitMQ}}
    <PackageReference Include="RabbitMQ.Client"  Version="$(RabbitMQVersion)" />
    {{/RabbitMQ}}
    {{#DynamicLogger}}
    <PackageReference Include="Steeltoe.Extensions.Logging.DynamicLogger" Version="$(SteeltoeLoggingVersion)"/>
    {{/DynamicLogger}}
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
